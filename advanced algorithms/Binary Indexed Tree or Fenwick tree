#include <iostream>
using namespace std;
int getSum(int *bitree,int q){
  int sum=0;
  int cn=q+1;
  while(cn>0){
    sum+=bitree[cn];
    cn-=cn&(-cn);
  }
  return sum;
}
void update(int *bitree,int cn,int val,int n){
  cn=cn+1;
  while(cn<=n){
    bitree[cn]+=val;
    cn+=cn&(-cn);
  }
}
int* constructBITree(int arr[],int n){
  int *bitree=new int[n+1];
  int i;
  for(i=0;i<n+1;i++){
    bitree[i]=0;
  }
  for(i=0;i<n;i++){
    update(bitree,i,arr[i],n);
  }
  return bitree;
}
int main(){
  int arr[]={2,1,1,3,2,3,4,5,6,7,8,9};
  int *bitree=constructBITree(arr,12);
  cout<<getSum(bitree,5)<<"\n";
  arr[3]+=6;
  update(bitree,3,6,12);
  cout<<getSum(bitree,5)<<"\n";
}
